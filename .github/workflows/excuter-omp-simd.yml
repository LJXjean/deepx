name: Excuter/omp-simd Build
on: [push, pull_request]

env:
  HIGHWAY_VERSION: 1.2.0  # 统一的 Highway 版本号

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-latest, windows-latest]
        backend: [ompsimd]
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    # 系统依赖安装
    - name: Install Dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-22.04'
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libopenblas-dev libyaml-cpp-dev libjemalloc-dev clang git
        
    - name: Install Dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install openblas yaml-cpp jemalloc
        
    - name: Install Dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install openblas yaml-cpp

    # 设置 ccache
    - name: Setup ccache
      uses: hendrikmuhs/ccache-action@v1.2

    # 构建缓存
    - name: Cache Build
      uses: actions/cache@v3
      with:
        path: |
          excuter/op-mem-ompsimd/build
          excuter/common/build
          ~/.ccache
        key: ${{ runner.os }}-build-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-build-

    # Highway 库安装
    - name: Install Highway (Ubuntu)
      if: matrix.os == 'ubuntu-22.04'
      run: |
        git clone https://github.com/google/highway.git
        cd highway
        git checkout ${{ env.HIGHWAY_VERSION }}
        cmake -B build -DCMAKE_BUILD_TYPE=Release -DHWY_SYSTEM_GTEST=OFF -DBUILD_TESTING=OFF
        cmake --build build -j$(nproc)
        sudo cmake --install build

    - name: Install Highway (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        git clone https://github.com/google/highway.git
        cd highway
        git checkout ${{ env.HIGHWAY_VERSION }}
        cmake -B build -DCMAKE_BUILD_TYPE=Release -DHWY_SYSTEM_GTEST=OFF -DBUILD_TESTING=OFF
        cmake --build build -j$(nproc)
        sudo cmake --install build

    - name: Install Highway (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        git clone https://github.com/google/highway.git
        cd highway
        git checkout ${{ env.HIGHWAY_VERSION }}
        cmake -B build -DCMAKE_BUILD_TYPE=Release -DHWY_SYSTEM_GTEST=OFF -DBUILD_TESTING=OFF
        cmake --build build --config Release
        cmake --install build

    # 构建 common 库
    - name: Build Common Library
      run: |
        cd excuter/common
        mkdir -p build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER_LAUNCHER=ccache ..
        cmake --build . --config Release -j$(nproc)
        
    # 构建执行器
    - name: CMake Build
      run: |
        cd excuter/op-mem-ompsimd
        mkdir -p build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER_LAUNCHER=ccache ..
        cmake --build . --config Release -j$(nproc)

    # # 运行测试（可选）
    # - name: Run Tests
    #   run: |
    #     cd excuter/op-mem-ompsimd/build
    #     ctest --output-on-failure
