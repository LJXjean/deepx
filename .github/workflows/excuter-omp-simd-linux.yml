name: Excuter/omp-simd Build
on: [push, pull_request]

env:
  HIGHWAY_VERSION: 1.0.7

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-22.04]  # 只保留 Ubuntu
        backend: [ompsimd]
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    # 系统依赖安装
    - name: Install Dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-22.04'
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libopenblas-dev libyaml-cpp-dev libjemalloc-dev clang git

    # 设置 ccache
    - name: Setup ccache
      uses: hendrikmuhs/ccache-action@v1.2

    # 构建缓存
    - name: Cache Build
      uses: actions/cache@v3
      with:
        path: |
          excuter/op-mem-ompsimd/build
          excuter/common/build
          ~/.ccache
        key: ${{ runner.os }}-build-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-build-

    # Highway 库安装
    - name: Install Highway (Ubuntu)
      run: |
        echo "Attempt to build Highway"
        git clone --depth 1 --branch ${{ env.HIGHWAY_VERSION }} https://github.com/google/highway.git && \
        cd highway && \
        cmake -B build \
          -DCMAKE_BUILD_TYPE=Release \
          -DBUILD_TESTING=OFF \
          -DHWY_ENABLE_EXAMPLES=OFF \
          -DHWY_ENABLE_CONTRIB=OFF \
          -DCMAKE_INSTALL_PREFIX=/usr/local && \
        cmake --build build -j$(nproc) --target hwy && \
        sudo cmake --install build && \
        
    # 构建 common 库
    - name: Build Common Library
      run: |
        cd excuter/common
        mkdir -p build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER_LAUNCHER=ccache ..
        cmake --build . --config Release -j$(nproc)
        
    # 构建执行器
    - name: CMake Build
      run: |
        cd excuter/op-mem-ompsimd
        mkdir -p build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER_LAUNCHER=ccache ..
        cmake --build . --config Release -j$(nproc)